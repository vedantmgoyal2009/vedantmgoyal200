// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/ubuntu
{
  "name": "Ubuntu",
  "build": {
    "dockerfile": "Dockerfile",
    // Update 'VARIANT' to pick an Ubuntu version: jammy / ubuntu-22.04, focal / ubuntu-20.04, bionic /ubuntu-18.04
    // Use ubuntu-22.04 or ubuntu-18.04 on local arm64/Apple Silicon.
    "args": { "VARIANT": "ubuntu-22.04" }
  },

  // Set *default* container specific settings.json values on container create.
  "settings": {},
  "postStartCommand": "brew update && brew upgrade oh-my-posh && exec bash",

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "vscjava.vscode-java-pack",
    "ms-vscode.cpptools-extension-pack",
    "ms-python.python",
    "github.copilot-nightly",
    "eamodio.gitlens-insiders",
    "GitHub.copilot-labs",
    "ms-vscode.powershell-preview",
    "ms-vscode.wordcount",
    "redhat.vscode-yaml",
    "mutantdino.resourcemonitor",
    "visualstudioexptteam.vscodeintellicode",
    "ask-toolkit.alexa-skills-kit-toolkit",
    "esbenp.prettier-vscode"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [3000, 59457, 59456],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "uname -a",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  "features": {
    "git": "latest",
    "github-cli": "latest",
    "homebrew": "latest",
    "node": "latest",
    "python": "latest",
    "powershell": "latest",
    "dotnet": "latest"
  },

  "customizations": {
    "codespaces": {
      "repositories": {
        "vedantmgoyal2009/vedantmgoyal2009": {
          "permissions": "write-all"
        },
        "vedantmgoyal2009/winget-releaser": {
          "permissions": "write-all"
        },
        "vedantmgoyal2009/winget-pkgs": {
          "permissions": "write-all"
        }
      }
    }
  }
}
