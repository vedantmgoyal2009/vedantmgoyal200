name: WinGet Automation

on:
  schedule:
    - cron: '11 0,6,12,18 * * *'
  workflow_dispatch:

concurrency:
  group: winget-pkgs-automation
  cancel-in-progress: false

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository ðŸ‘‹
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Run automation script ðŸ¤–
        run: |
          Function Get-GitHubBotToken {
            $PkeyBytes = [System.Convert]::FromBase64String(($env:BOT_PVT_KEY -Replace '-{5}.*-{5}', '' -Replace '\r?\n', ''))
            $PrivateKey = [System.Security.Cryptography.RSA]::Create()
            $PrivateKey.ImportRSAPrivateKey($PkeyBytes, [ref] $Null)
            $Base64Header = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes('{"alg":"RS256","typ":"JWT"}'))
            $Base64Payload = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes((ConvertTo-Json -Compress -InputObject @{
                            'iat' = [System.DateTimeOffset]::UtcNow.ToUnixTimeSeconds() - 60; # issued 60 seconds ago to allow for clock drift
                            'exp' = [System.DateTimeOffset]::UtcNow.ToUnixTimeSeconds() + 60 * 2; # expires in 2 minutes
                            'iss' = $env:BOT_APP_ID;
                        })))
            $Signature = $PrivateKey.SignData([System.Text.Encoding]::UTF8.GetBytes("$Base64Header.$Base64Payload"), 'SHA256', [Security.Cryptography.RSASignaturePadding]::Pkcs1)
            $Base64Signature = [System.Convert]::ToBase64String($Signature)
            return (Invoke-RestMethod -Uri https://api.github.com/app/installations/$env:BOT_INST_ID/access_tokens -Method Post -Headers @{
                    'Authorization' = "Bearer $Base64Header.$Base64Payload.$Base64Signature"
                    'Accept'        = 'application/vnd.github.machine-man-preview+json'
                }).token
          }

          .\Automation.ps1
        env:
          BOT_APP_ID: ${{ secrets.BOT_APP_ID }}
          BOT_INST_ID: ${{ secrets.BOT_INST_ID }}
          BOT_PVT_KEY: ${{ secrets.BOT_PVT_KEY }}
          GITHUB_TOKEN: ${{ secrets.MYSUPERSECRETINFORMATION }}
        shell: pwsh
        working-directory: winget-pkgs-automation

      - uses: actions/upload-artifact@v3
        with:
          name: wpa
          path: winget-pkgs-automation/wpa.json
          if-no-files-found: error
          retention-days: 0 # use rentention settings from the repo
