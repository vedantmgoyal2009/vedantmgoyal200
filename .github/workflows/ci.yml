name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
concurrency:
  group: ${{ github.event.number || github.event_name }}
  cancel-in-progress: true
jobs:
  get-commit:
    name: Get Commit
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      is-wpa-modified: steps.commit-info.outputs.wpa-modified
      is-docs-modified: steps.commit-info.outputs.docs-modified
      is-vscode-extension-modified: steps.commit-info.outputs.vscode-extension-modified
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Get commit information
        run: |
          if [ '${{ github.event_name }}' == 'push' ]; then
            echo "::set-output name=wpa-modified::$(git diff --quiet HEAD HEAD~1 -- src/winget-pkgs-automation && echo false || echo true)"
            echo "::set-output name=docs-modified::$(git diff --quiet HEAD HEAD~1 -- docs && echo false || echo true)"
            echo "::set-output name=vscode-extension-modified::$(git diff --quiet HEAD HEAD~1 -- src/vsc* README.md LICENSE CODE_OF_CONDUCT.md packag*.json && echo false || echo true)"
          else
            echo "::set-output name=wpa-modified::$(git diff --quiet ${{ github.pull_request.base.sha }} ${{ github.pull_request.head.sha }} -- src/winget-pkgs-automation && echo false || echo true)"
            echo "::set-output name=docs-modified::$(git diff --quiet ${{ github.pull_request.base.sha }} ${{ github.pull_request.head.sha }} -- docs && echo false || echo true)"
            echo "::set-output name=vscode-extension-modified::$(git diff --quiet ${{ github.pull_request.base.sha }} ${{ github.pull_request.head.sha }} -- src/vsc* README.md LICENSE CODE_OF_CONDUCT.md packag*.json && echo false || echo true)"
          fi
        id: commit-info
  commitlint:
    name: Commitlint
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - run: npm ci
      - name: Validate Commit Message (push)
        if: github.event_name == 'push'
        run: git log -1 --pretty=format:"%s" | npx commitlint --verbose
      - name: Validate Commit Message (pull request)
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
  winget-pkgs-automation:
    name: WinGet Automation (build)
    needs: get-commit
    if: needs.get-commit.outputs.is-wpa-modified == 'true' && (github.event_name == 'push' || github.event_name == 'pull_request')
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
        working-directory: src/winget-pkgs-automation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Authenticate GitHub Bot
        run: |
          npm ci
          echo 'async function main() {
            console.log((await require("@octokit/auth-app").createAppAuth({
              appId: ${{ secrets.BT_AP_ID}},
              privateKey: "${{ secrets.BT_AP_PKY }}",
              clientId: "${{ secrets.BT_CLNT_ID }}",
              clientSecret: "${{ secrets.BT_CLNT_SCRT }}",
              installationId: ${{ secrets.BT_INST_ID }},
            })({ type: "installation" })).token);
          }
          main();' > auth.js
          echo "::set-output name=token::$(node auth.js)"
        id: auth
      - name: Run Pester Checks
        run: |
          $container = New-PesterContainer -Path $PSScriptRoot
          $PesterPreference = [PesterConfiguration]::Default
          $PesterPreference.Run.Container = $container
          $PesterPreference.CodeCoverage.Enabled = $true
          $PesterPreference.CodeCoverage.OutputFormat = 'JaCoCo'
          $PesterPreference.CodeCoverage.CoveragePercentTarget = 100
          $PesterPreference.Output.Verbosity = 'Detailed'

          Invoke-Pester -Configuration $PesterPreference
          git config --local user.name 'winget-pkgs-automation-bot[bot]'
          git config --local user.email '93540089+winget-pkgs-automation-bot[bot]@users.noreply.github.com'
          git commit -m "chore(wpa): update packages.txt" -- ./packages.txt
          git push https://x-access-token:${{ steps.auth.outputs.token }}@github.com/vedantmgoyal2009/vedantmgoyal2009.git
      - uses: codecov/codecov-action@v3
        with:
          name: winget-pkgs-automation-codecov
          directory: ./
          files: ./coverage.xml
          working-directory: src/winget-pkgs-automation
          fail_ci_if_error: false
          verbose: true
  vscode-extension-publish:
    name: Publish VSCode Extension
    needs: get-commit
    if: needs.get-commit.outputs.is-vscode-extension-modified == 'true' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - run: npm ci
      - name: Publish to Marketplace
        run: npm run vs-publish
        env:
          VSCE_PAT: ${{ secrets.VS_MRKTPLACE }}
  build-docs-and-deploy:
    name: Deploy to Firebase Hosting on merge
    needs: get-commit
    if: needs.get-commit.outputs.is-docs-modified == 'true' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - run: npm ci && npm run build --workspace=docs --if-present
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          entryPoint: './docs'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_URLSHORTENER_51B07 }}'
          channelId: live
          projectId: urlshortener-51b07
  preview-docs-pull-request:
    name: Deploy to Firebase Hosting on PR
    needs: get-commit
    if: needs.get-commit.outputs.is-docs-modified == 'true' && github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - run: npm ci && npm run build --workspace=docs --if-present
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          expires: 1h
          entryPoint: './docs'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_URLSHORTENER_51B07 }}'
          projectId: urlshortener-51b07
  # codeql-analysis:
  #   name: CodeQL (analyse)
  #   runs-on: ubuntu-latest
  #   needs: get-commit
  #   if: needs.get-commit.outputs.is-wr-modified == 'true' && (github.event_name == 'push' || github.event_name == 'pull_request')
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       language: ['javascript']
  #       # language: [ 'java', 'javascript' ] <-- auto-detected, commented manually
  #       # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
  #       # Learn more about CodeQL language support at https://git.io/codeql-language-support
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     # Initializes the CodeQL tools for scanning.
  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v1
  #       with:
  #         languages: ${{ matrix.language }}
  #     # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
  #     # If this step fails, then you should remove it and run the build manually (see https://github.com/github/codeql-action)
  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v1
  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v1
