{
  "Commit": {
    "Sha": "fc215c4377d5a554dcbce442a6b5dd944588d6bf",
    "Message": "Implement PowerShell cmdlets (#2838)\n\nThis PR implements two new PowerShelll cmdlets Assert-WinGetPackageManager and Repair-WinGetPackageManager as well as the WinGetPackageManager DSC Resource.\r\n\r\nAssert-WinGetPackageManager verifies the integrity of winget for the current user. If winget is not set up correctly, it will throw an exception with the type of failure if detected.\r\nIt can detect:\r\n\r\nFailed call into winget --version.\r\nwinget is not found because is not in the PATH environment variable.\r\nwinget is not found because the App execution alias is disabled.\r\nWindows OS is not supported.\r\nThe AppInstaller package is not installed in the machine.\r\nThe AppInstaller package is not registered for the user.\r\nThe AppInstaller package is old and doesn't contain winget.\r\nAssert-WinGetPackageManager -Version foo also verifies the installed version is the same as the expected.\r\nAssert-WinGetPackageManager -Latest also verifies the installed version is the latest release version.\r\nAssert-WinGetPackageManager -Latest -IncludePrerelease also verifies the installed version is the latest prerelease version.\r\n\r\nRepair-WinGetPackageManager does the same as Assert-WinGetIntegrity but attempts to fix winget depending on the failure. Returns 0 is succeeded.\r\n\r\nRepair-WinGetPackageManager repairs current winget installed and performs no updates. If winget is not installed or there's catastrophic failure then installs the latest released winget.\r\nRepair-WinGetPackageManager -Version foo repairs winget and makes sure that the current installed version is the expected one.\r\nRepair-WinGetPackageManager -Latest repairs winget and makes sure winget is the latest released version.\r\nRepair-WinGetPackageManager -Latest -IncludePreRelease repairs winget and makes sure winget is the latest prereleased version.\r\n\r\nIt sadly can't repair if AppExecution alias is disabled because there's no programmatic way to do it (requires internal APIs).\r\n\r\nIt also doesn't install Microsoft.UI.Xaml.2.7 as a dependency because the current solution to download the nuget package, extract it and install the appx within is not the right approach we want to follow. We will follow up internally with the owners of the package to do something similar as the VCLibs packages.\r\n\r\nThere's still a lot of opportunity for Repair-WinGetPackageManager to make it more robust, but this PR is just the starting phase.\r\n\r\nThe WinGetPackageManager DSC resource is just a simple wrapper around those two cmdlets. There's also a sample on how to use it.\r\n\r\nFor now, all versions need to be the tag name of the releases in GitHub.\r\n\r\nAlso, moved Get-WinGetVersion from Crescendo to a binary cmdlet.\r\n\r\n---------\r\n\r\nCo-authored-by: JohnMcPMS <johnmcp@microsoft.com>",
    "Author": "Ruben Guerrero"
  },
  "BuildDateTime": "Tuesday, March 21, 2023 10:28:05 PM"
}
