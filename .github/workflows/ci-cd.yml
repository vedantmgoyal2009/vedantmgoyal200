name: CI/CD

on:
  push:
    branches: [main]
    paths: [.github/workflows/ci-cd.yml]
  workflow_dispatch:
    inputs:
      workflow:
        description: Workflow to run
        type: choice
        options:
          - MRF-BOT
        required: true
  schedule:
    - cron: '30 05 * * *'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  mrf-bot:
    if: github.event_name == 'workflow_dispatch' && inputs.workflow == 'MRF-BOT'
    defaults:
      run:
        working-directory: mrf-bot
    timeout-minutes: 20
    runs-on: windows-latest
    steps:
      - name: Checkout code ðŸ‘‹
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js ðŸ“¦
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          check-latest: true

      - run: npm ci && npm run build

      - run: npm run mrf-bot
        env:
          MRF_ACCOUNTS: ${{ secrets.MRF_ACCOUNTS }}
          MRF_EMAIL: ${{ secrets.MRF_EMAIL }}
          MRF_EMAIL_PASS: ${{ secrets.MRF_EMAIL_PASS }}
          MRF_SESSIONS: ${{ secrets.MRF_SESSIONS }}

  clean-actions-runs:
    name: Clean stale workflow runs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - workflow: CI/CD
          - workflow: Update WinGetDev
          - workflow: Deploy to Firebase Hosting on merge
          - workflow: Deploy to Firebase Hosting on PR
          - workflow: Move Packages (winget-pkgs)
    steps:
      - name: 'ðŸ§¹ Cleanup ðŸ«§ðŸª¥ðŸ§¼ðŸ§½'
        run: |
          $ErrorActionPreference = 'SilentlyContinue'
          gh run list --workflow '${{ matrix.workflow }}' --limit 100 --status completed --json databaseId `
            --repo vedantmgoyal2009/vedantmgoyal2009 | ConvertFrom-Json | ForEach-Object { `
              gh run delete $_.databaseId --repo vedantmgoyal2009/vedantmgoyal2009 `
            }
          Exit 0 # Don't fail the job if there are no runs to delete
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.MYSUPERSECRETINFORMATION }}
